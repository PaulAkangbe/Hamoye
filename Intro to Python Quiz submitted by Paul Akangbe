
## Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

df = pd.read_csv('sample_csv.file')
url= 'https://raw.githubusercontent.com/WalePhenomenon/climate_change/master/fuel_ferc1.csv'
df_csv=pd.read_csv('url')
df.head()
record_id	utility_id_ferc1	report_year	plant_name_ferc1	fuel_type_code_pudl	fuel_unit	fuel_qty_burned	fuel_mmbtu_per_unit	fuel_cost_per_unit_burned	fuel_cost_per_unit_delivered	fuel_cost_per_mmbtu
0	f1_fuel_1994_12_1_0_7	1	1994	rockport	coal	ton	5377489.0	16.590	18.59	18.53	1.121
1	f1_fuel_1994_12_1_0_10	1	1994	rockport total plant	coal	ton	10486945.0	16.592	18.58	18.53	1.120
2	f1_fuel_1994_12_2_0_1	2	1994	gorgas	coal	ton	2978683.0	24.130	39.72	38.12	1.650
3	f1_fuel_1994_12_2_0_7	2	1994	barry	coal	ton	3739484.0	23.950	47.21	45.99	1.970
4	f1_fuel_1994_12_2_0_10	2	1994	chickasaw	gas	mcf	40533.0	1.000	2.77	2.77	2.57
df.tail()
record_id	utility_id_ferc1	report_year	plant_name_ferc1	fuel_type_code_pudl	fuel_unit	fuel_qty_burned	fuel_mmbtu_per_unit	fuel_cost_per_unit_burned	fuel_cost_per_unit_delivered	fuel_cost_per_mmbtu
29518	f1_fuel_2018_12_12_0_13	12	2018	neil simpson ct #1	gas	mcf	18799.0	1.059	4.78	4.78	9.03
29519	f1_fuel_2018_12_12_1_1	12	2018	cheyenne prairie 58%	gas	mcf	806730.0	1.050	3.65	3.65	6.95
29520	f1_fuel_2018_12_12_1_10	12	2018	lange ct facility	gas	mcf	104554.0	1.060	4.77	4.77	8.99
29521	f1_fuel_2018_12_12_1_13	12	2018	wygen 3 bhp 52%	coal	ton	315945.0	16.108	3.06	14.76	1.11
29522	f1_fuel_2018_12_12_1_14	12	2018	wygen 3 bhp 52%	gas	mcf	17853.0	1.059	0.00	0.00	11.68

df.shape
(29523, 11)
df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 29523 entries, 0 to 29522
Data columns (total 11 columns):
 #   Column                        Non-Null Count  Dtype  
---  ------                        --------------  -----  
 0   record_id                     29523 non-null  object 
 1   utility_id_ferc1              29523 non-null  int64  
 2   report_year                   29523 non-null  int64  
 3   plant_name_ferc1              29523 non-null  object 
 4   fuel_type_code_pudl           29523 non-null  object 
 5   fuel_unit                     29343 non-null  object 
 6   fuel_qty_burned               29523 non-null  float64
 7   fuel_mmbtu_per_unit           29523 non-null  float64
 8   fuel_cost_per_unit_burned     29523 non-null  float64
 9   fuel_cost_per_unit_delivered  29523 non-null  float64
 10  fuel_cost_per_mmbtu           29523 non-null  float64
dtypes: float64(5), int64(2), object(4)
memory usage: 2.5+ MB
Q1.
A = [1,2,3,4,5,6]
B = [13, 21, 34]
A.extend(B)
A
[1, 2, 3, 4, 5, 6, 13, 21, 34]
Q2
np.identity(3)

array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]])
I = np.eye(3)
I
array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]])

df.head()
record_id	utility_id_ferc1	report_year	plant_name_ferc1	fuel_type_code_pudl	fuel_unit	fuel_qty_burned	fuel_mmbtu_per_unit	fuel_cost_per_unit_burned	fuel_cost_per_unit_delivered	fuel_cost_per_mmbtu
0	f1_fuel_1994_12_1_0_7	1	1994	rockport	coal	ton	5377489.0	16.590	18.59	18.53	1.121
1	f1_fuel_1994_12_1_0_10	1	1994	rockport total plant	coal	ton	10486945.0	16.592	18.58	18.53	1.120
2	f1_fuel_1994_12_2_0_1	2	1994	gorgas	coal	ton	2978683.0	24.130	39.72	38.12	1.650
3	f1_fuel_1994_12_2_0_7	2	1994	barry	coal	ton	3739484.0	23.950	47.21	45.99	1.970
4	f1_fuel_1994_12_2_0_10	2	1994	chickasaw	gas	mcf	40533.0	1.000	2.77	2.77	2.570

df.groupby('fuel_type_code_pudl')['fuel_cost_per_unit_burned'].mean()

fuel_type_code_pudl
coal         67.421830
gas          13.659397
nuclear    4955.157002
oil         168.877086
other        18.253856
waste        19.518122
Name: fuel_cost_per_unit_burned, dtype: float64
The average for gas is lowest.
Q4.
round(df.describe(),2)
utility_id_ferc1	report_year	fuel_qty_burned	fuel_mmbtu_per_unit	fuel_cost_per_unit_burned	fuel_cost_per_unit_delivered	fuel_cost_per_mmbtu
count	29523.00	29523.00	2.952300e+04	29523.00	29523.00	29523.00	29523.00
mean	118.60	2005.81	2.622119e+06	8.49	208.65	917.57	19.30
std	74.18	7.03	9.118004e+06	10.60	2854.49	68775.93	2091.54
min	1.00	1994.00	1.000000e+00	0.00	-276.08	-874.94	-41.50
25%	55.00	2000.00	1.381700e+04	1.02	5.21	3.78	1.94
50%	122.00	2006.00	2.533220e+05	5.76	26.00	17.37	4.13
75%	176.00	2012.00	1.424034e+06	17.01	47.11	42.14	7.74
max	514.00	2018.00	5.558942e+08	341.26	139358.00	7964521.00	359278.00
For fuel_mmbtu_per_unit the Std dev is 10.60 and 75th Percentile is 17.01.
Q5.
round(df.skew(),2)
utility_id_ferc1                  0.61
report_year                       0.01
fuel_qty_burned                  15.85
fuel_mmbtu_per_uni
dtype: float64

round(df.kurtosis(),2)
fuel_mmbtu_per_unit                55.60
fuel_cost_per_unit_burned         485.26
fuel_cost_per_unit_delivered    11765.05
fuel_cost_per_mmbtu             29489.13
dtype: float64
For Fuel_qty_burned Skewness is 15.85 and Kurtosis is 651.37.
Q6.

feature = [col for col in df.columns if df[col].isnull().any()]
total = df['fuel_unit'].isnull().sum()
percent_missing = round(df['fuel_unit'].isnull().sum() * 100 / len(df),4)

print('Feature:',feature,', ''Total',total,', ''Percent',percent_missing)
Feature: ['fuel_unit'] , Total 180 , Percent 0.6097
Q7.
The feature with missing values falls under Categorical category.
Missing value imputation technique used would be Mode imputation.
Q8.
df.corr()['fuel_cost_per_unit_burned'].sort_values(ascending=True)

utility_id_ferc1                    1.09
report_year                        -1.15
fuel_qty_burned                   651.37
fuel_mmbtu_per_unit                55.60
fuel_cost_per_unit_burned         485.26
fuel_cost_per_unit_delivered    11765.05
fuel_cost_per_mmbtu             29489.13
dtype: float64
For Fuel_qty_burned Skewness is 15.85 and Kurtosis is 651.37.
Q6.
feature = [col for col in df.columns if df[col].isnull().any()]
total = df['fuel_unit'].isnull().sum()
percent_missing = round(df['fuel_unit'].isnull().sum() * 100 / len(df),4)

print('Feature:',feature,', ''Total',total,', ''Percent',percent_missing)
Feature: ['fuel_unit'] , Total 180 , Percent 0.6097
Q7.
The feature with missing values falls under Categorical category.
Missing value imputation technique used would be Mode imputation.
Q8.
df.corr()['fuel_cost_per_unit_burned'].sort_values(ascending=True)
utility_id_ferc1               -0.037863
fuel_qty_burned                -0.018535
fuel_mmbtu_per_unit            -0.010034
fuel_cost_per_mmbtu            -0.000437
fuel_cost_per_unit_delivered    0.011007
report_year                     0.013599
fuel_cost_per_unit_burned       1.000000
Name: fuel_cost_per_unit_burned, dtype: float64
fuel_qty_burned and fuel_mmbtu_per_unit have second and third lowest correlation respectively with the Fuel Cost Per Unit Burned.
Q9.
df.head()
record_id	utility_id_ferc1	report_year	plant_name_ferc1	fuel_type_code_pudl	fuel_unit	fuel_qty_burned	fuel_mmbtu_per_unit	fuel_cost_per_unit_burned	fuel_cost_per_unit_delivered	fuel_cost_per_mmbtu
0	f1_fuel_1994_12_1_0_7	1	1994	rockport	coal	ton	5377489.0	16.590	18.59	18.53	1.121
1	f1_fuel_1994_12_1_0_10	1	1994	rockport total plant	coal	ton	10486945.0	16.592	18.58	18.53	1.120
2	f1_fuel_1994_12_2_0_1	2	1994	gorgas	coal	ton	2978683.0	24.130	39.72	38.12	1.650
3	f1_fuel_1994_12_2_0_7	2	1994	barry	coal	ton	3739484.0	23.950	47.21	45.99	1.970
4	f1_fuel_1994_12_2_0_10	2	1994	chickasaw	gas	mcf	40533.0	1.000	2.77	2.77	2.570
a = df.loc[(df['report_year']==1998) & (df['fuel_type_code_pudl']=='coal')]['fuel_cost_per_unit_burned'].sum()
a
11902.597
b = df.loc[(df['report_year']==1994) & (df['fuel_type_code_pudl']=='coal')]['fuel_cost_per_unit_burned'].sum()
14984.572000000002
print('The percentage change is:', round((a-b)*100/a))
The percentage change is: -26.0
Q10.

df.groupby('report_year')['fuel_cost_per_unit_delivered'].mean().sort_values(ascending=False)
report_year
1997    11140.197239
1996     9196.705948
2000      985.362877
2009      652.694163
2018      499.269966
2015      326.535511
1998      287.154420
2014      192.737183
2013      172.307591
2004      139.524275
2016      103.901761
2010       91.862105
1994       63.636060
2012       60.994502
2001       60.050396
2011       59.774667
2008       58.588197
2003       55.663493
2002       47.594361
2017       46.196861
2007       43.325023
2005       41.438184
2006       38.657484
1995       32.735269
1999       25.551627
Name: fuel_cost_per_unit_delivered, dtype: float64
Year 1997 has the highest average fuel cost per unit delivered.
